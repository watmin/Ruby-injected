#!/usr/bin/env ruby

# frozen_string_literal: true

require 'bundler/setup'
require 'pry'

require 'injected'

class DemoInterface < Injected::Interface
  interface_method(:demo, :arg1, :arg2, arg3: :default)
end

class DemoImplementation < Injected::Implementation
  implements DemoInterface

  def demo(arg1, arg2, arg3: :wat)
    "arg1: #{arg1}; arg2: #{arg2}; arg3: #{arg3}"
  end
end

class DemoService < Injected::Instance
  injected(DemoInterface, :demo_dependency)

  def demo
    demo_dependency.demo(1, 2)
  end
end

injector = Injected::Injector.new(
  DemoInterface => DemoImplementation
)

demo_service = injector.instance(DemoService)

binding.pry # rubocop:disable Lint/Debugger

# demo_service.demo # => "arg1: 1; arg2: 2; arg3: wat"
# demo_service.pry
# demo_dependency.demo(1, 'two')
# demo_dependency.demo(1, 'two', arg3: :three)
